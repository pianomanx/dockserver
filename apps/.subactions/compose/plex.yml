#!/bin/ansible-playbook
#
# Title:      Plex Subtask
# Author(s):  MrDoob
# GNU:        General Public License v3.0
################################################################################
---
- hosts: localhost
  gather_facts: false
  tasks:
    - name: 'Set Known Facts'
      set_fact:
        app: 'plex'
    - name: 'Register Server IP'
      uri:
        url: http://ifconfig.me/ip
        return_content: yes
      register: ipaddress
    - name: 'Register Domain'
      shell: cat /etc/hosts | grep 127.0.0.1 | tail -n 1 | awk '{print $2}'
      register: domain
    - name: Check {{app}}-preferences.xml exists
      stat:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
      register: plex_prefs
    - name: 'secure Connections is missing'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences/@secureConnections
        count: yes
      register: secure_hits
      when:
        - plex_prefs.stat.exists
    - name: 'Add secureConnections if missing'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: secureConnections
        value: '1'
      when:
        - plex_prefs.stat.exists
        - secure_hits.count == 0
    - name: 'Read Preferences.xml'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        content: attribute
      register: plex_pref_content
      when: plex_prefs.stat.exists
    - name: 'custom Connections missing'
      set_fact:
        customConnections: 'http://{{ipaddress.content}}:32400, http://plex.{{domain.stdout}}:32400'
      when:
        - plex_prefs.stat.exists == False
    - name: 'Add Custom Connection Labels'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: customConnections
        value: 'http://{{ipaddress.content}}:32400, http://plex.{{domain.stdout}}:32400'
      when: plex_prefs.stat.exists
    - name: 'Edit Generate - Chapter -Thumb - Behavior to never'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: GenerateChapterThumbBehavior
        value: 'never'
      when: plex_prefs.stat.exists
    - name: 'Edit Loudness - Analysis - Behavior to never'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: LoudnessAnalysisBehavior
        value: 'never'
      when: plex_prefs.stat.exists
    - name: 'Edit Minutes - Allowed - Paused to max 10min'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: MinutesAllowedPaused
        value: '10'
      when: plex_prefs.stat.exists
    - name: 'Edit DLNA-Enabled to disable'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: DlnaEnabled
        value: 'p'
      when: plex_prefs.stat.exists
    - name: 'Edit DisableTLSv1_0'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: DisableTLSv1_0
        value: '1'
      when: plex_prefs.stat.exists
    - name: 'Edit TranscoderH264BackgroundPreset'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: TranscoderH264BackgroundPreset
        value: 'faster'
      when: plex_prefs.stat.exists
    - name: 'Edit ScannerLowPriority'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: ScannerLowPriority
        value: '1'
      when: plex_prefs.stat.exists
    - name: 'Edit ManualPortMappingMode'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: ManualPortMappingMode
        value: '1'
      when: plex_prefs.stat.exists
    - name: 'Edit DlnaReportTimeline'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: DlnaReportTimeline
        value: '0'
      when: plex_prefs.stat.exists
    - name: 'Edit TranscoderTempDirectory'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: TranscoderTempDirectory
        value: '/transcode'
      when: plex_prefs.stat.exists
    - name: 'Edit TranscoderThrottleBuffer'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: TranscoderThrottleBuffer
        value: '200'
      when: plex_prefs.stat.exists
    - name: 'Edit TranscodeCountLimit'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: TranscodeCountLimit
        value: '4'
      when: plex_prefs.stat.exists
    - name: 'Edit autoEmptyTrash'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: autoEmptyTrash
        value: '1'
      when: plex_prefs.stat.exists
    - name: 'Edit RelayEnabled'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: RelayEnabled
        value: '0'
      when: plex_prefs.stat.exists
    - name: 'Check /dev/dri exists'
      stat:
        path: '/dev/dri'
      register: dev_dri
    - name: 'Edit HardwareAcceleratedCodecs'
      xml:
        path: '/opt/appdata/plex/database/Library/Application Support/Plex Media Server/Preferences.xml'
        xpath: /Preferences
        attribute: HardwareAcceleratedCodecs
        value: '1'
      when:
        - plex_prefs.stat.exists
        - dev_dri.stat.exists == True
##EOF